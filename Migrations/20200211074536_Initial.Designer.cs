// <auto-generated />
using System;
using BusMeal.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusMeal.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200211074536_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusMeal.API.Core.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("RowId");

                    b.Property<string>("TableName")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<DateTime>("TrackedDate");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderEntryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusOrderEntryHeaderId");

                    b.Property<int>("OrderQty");

                    b.HasKey("Id");

                    b.HasIndex("BusOrderEntryHeaderId");

                    b.ToTable("BusOrderEntryDetail");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderEntryHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusOrderVerificationHeaderId");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("DormitoryBlockId");

                    b.Property<DateTime>("OrderEntryDate");

                    b.HasKey("Id");

                    b.HasIndex("BusOrderVerificationHeaderId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DormitoryBlockId");

                    b.ToTable("BusOrderEntryHeader");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderVerificationHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderNo")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<bool>("OrderStatus");

                    b.Property<DateTime>("Orderdate");

                    b.HasKey("Id");

                    b.ToTable("BusOrderVerificationHeader");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderVerificationHeaderTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusOrderVerificationHeaderId");

                    b.Property<int?>("BusTimeId");

                    b.Property<int?>("DormitoryBlockId");

                    b.Property<int>("SumOrderQty");

                    b.HasKey("Id");

                    b.HasIndex("BusOrderVerificationHeaderId");

                    b.HasIndex("BusTimeId");

                    b.HasIndex("DormitoryBlockId");

                    b.ToTable("BusOrderVerificationHeaderTotal");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(5);

                    b.Property<int>("DirectionEnum");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("BusTime");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LockedBusOrder");

                    b.Property<DateTime>("LockedMealOrder");

                    b.Property<int>("RowGrid");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.Counter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(2);

                    b.Property<string>("Location")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Counter");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.DormitoryBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("DormitoryBlock");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Firstname")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("Fullname")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("HrCoreNo")
                        .HasColumnType("varchar")
                        .HasMaxLength(8);

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MealOrderEntryHeaderId");

                    b.Property<int>("MealTypeId");

                    b.Property<int>("OrderQty");

                    b.HasKey("Id");

                    b.HasIndex("MealOrderEntryHeaderId");

                    b.HasIndex("MealTypeId");

                    b.ToTable("MealOrderDetail");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderEntryHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("MealOrderVerificationHeaderId");

                    b.Property<DateTime>("OrderEntryDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("MealOrderVerificationHeaderId");

                    b.ToTable("MealOrderEntryHeader");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderVerificationHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderNo")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<bool>("OrderedStatus");

                    b.HasKey("Id");

                    b.ToTable("MealOrderVerificationHeader");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderVerificationHeaderTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdjusmentQty");

                    b.Property<int>("LogBookQty");

                    b.Property<int>("MealOrderVerificationHeaderId");

                    b.Property<int>("MealTypeId");

                    b.Property<int>("SumOrderQty");

                    b.Property<int>("SwipeQty");

                    b.HasKey("Id");

                    b.HasIndex("MealOrderVerificationHeaderId");

                    b.HasIndex("MealTypeId");

                    b.ToTable("MealOrderVerificationHeaderTotal");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<int>("MealVendorId");

                    b.Property<string>("Name")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MealVendorId");

                    b.ToTable("MealType");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPhone")
                        .HasColumnType("varchar")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MealVendor");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.ModuleRights", b =>
                {
                    b.Property<int>("MyProperty")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("MyProperty");

                    b.ToTable("ModuleRights");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminStatus");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("GddbId")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<int>("LockTransStatus");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.UserDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDepartment");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.UserModuleRights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuleRightsMyProperty");

                    b.Property<int>("RightsId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleRightsMyProperty");

                    b.HasIndex("UserId");

                    b.ToTable("UserModuleRights");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderEntryDetail", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.BusOrderEntryHeader", "BusOrderEntryHeader")
                        .WithMany()
                        .HasForeignKey("BusOrderEntryHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderEntryHeader", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.BusOrderVerificationHeader", "BusOrderVerificationHeader")
                        .WithMany()
                        .HasForeignKey("BusOrderVerificationHeaderId");

                    b.HasOne("BusMeal.API.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("BusMeal.API.Core.Models.DormitoryBlock", "DormitoryBlock")
                        .WithMany()
                        .HasForeignKey("DormitoryBlockId");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.BusOrderVerificationHeaderTotal", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.BusOrderVerificationHeader", "BusOrderVerificationHeader")
                        .WithMany()
                        .HasForeignKey("BusOrderVerificationHeaderId");

                    b.HasOne("BusMeal.API.Core.Models.BusTime", "BusTime")
                        .WithMany()
                        .HasForeignKey("BusTimeId");

                    b.HasOne("BusMeal.API.Core.Models.DormitoryBlock", "DormitoryBlock")
                        .WithMany()
                        .HasForeignKey("DormitoryBlockId");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.Employee", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderDetail", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.MealOrderEntryHeader", "MealOrderEntryHeader")
                        .WithMany()
                        .HasForeignKey("MealOrderEntryHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusMeal.API.Core.Models.MealType", "MealType")
                        .WithMany()
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderEntryHeader", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("BusMeal.API.Core.Models.MealOrderVerificationHeader", "MealOrderVerificationHeader")
                        .WithMany()
                        .HasForeignKey("MealOrderVerificationHeaderId");
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealOrderVerificationHeaderTotal", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.MealOrderVerificationHeader", "MealOrderVerificationHeader")
                        .WithMany()
                        .HasForeignKey("MealOrderVerificationHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusMeal.API.Core.Models.MealType", "MealType")
                        .WithMany()
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.MealType", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.MealVendor", "MealVendor")
                        .WithMany()
                        .HasForeignKey("MealVendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.UserDepartment", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusMeal.API.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusMeal.API.Core.Models.UserModuleRights", b =>
                {
                    b.HasOne("BusMeal.API.Core.Models.ModuleRights", "ModuleRights")
                        .WithMany()
                        .HasForeignKey("ModuleRightsMyProperty");

                    b.HasOne("BusMeal.API.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
